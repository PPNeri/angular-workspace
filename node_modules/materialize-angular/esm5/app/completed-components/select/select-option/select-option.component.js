/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * @license
 * Copyright Workylab. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://raw.githubusercontent.com/workylab/materialize-angular/master/LICENSE
 */
import { Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';
import { config } from '../../../config';
var SelectOptionComponent = /** @class */ (function () {
    function SelectOptionComponent() {
        this.className = SelectOptionComponent.defaultProps.className;
        this.disabled = SelectOptionComponent.defaultProps.disabled;
        this.value = SelectOptionComponent.defaultProps.value;
        this.prefix = config.components.prefix;
        this.transitionDuration = SelectOptionComponent.defaultProps.transitionDuration;
        this.isActive = false;
        this.onClickEmitter = new EventEmitter();
        this.emitClick = this.emitClick.bind(this);
    }
    /**
     * @return {?}
     */
    SelectOptionComponent.prototype.ngAfterContentChecked = /**
     * @return {?}
     */
    function () {
        this.content = this.optionTemplateRef.nativeElement
            ? this.optionTemplateRef.nativeElement.textContent
            : '';
    };
    /**
     * @return {?}
     */
    SelectOptionComponent.prototype.onClick = /**
     * @return {?}
     */
    function () {
        if (!this.disabled) {
            setTimeout(this.emitClick, this.transitionDuration);
        }
    };
    /**
     * @return {?}
     */
    SelectOptionComponent.prototype.emitClick = /**
     * @return {?}
     */
    function () {
        this.onClickEmitter.emit(this.value);
    };
    SelectOptionComponent.defaultProps = {
        className: '',
        disabled: false,
        transitionDuration: 250,
        value: ''
    };
    SelectOptionComponent.decorators = [
        { type: Component, args: [{
                    selector: config.components.prefix + "-select-option }",
                    template: "<div [ngClass]=\"[prefix + '-select-option', className]\" materializeRipple (click)=\"onClick()\" [class.active]=\"isActive\" [rippleDuration]=\"transitionDuration\">\n  <div #optionTemplate>\n    <span>\n      <ng-content></ng-content>\n    </span>\n  </div>\n</div>\n \n"
                }] }
    ];
    /** @nocollapse */
    SelectOptionComponent.ctorParameters = function () { return []; };
    SelectOptionComponent.propDecorators = {
        optionTemplateRef: [{ type: ViewChild, args: ['optionTemplate', { static: true },] }],
        onClickEmitter: [{ type: Output, args: ['onClick',] }],
        className: [{ type: Input }],
        disabled: [{ type: Input }],
        value: [{ type: Input }]
    };
    return SelectOptionComponent;
}());
export { SelectOptionComponent };
if (false) {
    /** @type {?} */
    SelectOptionComponent.defaultProps;
    /** @type {?} */
    SelectOptionComponent.prototype.optionTemplateRef;
    /** @type {?} */
    SelectOptionComponent.prototype.onClickEmitter;
    /** @type {?} */
    SelectOptionComponent.prototype.className;
    /** @type {?} */
    SelectOptionComponent.prototype.disabled;
    /** @type {?} */
    SelectOptionComponent.prototype.value;
    /** @type {?} */
    SelectOptionComponent.prototype.prefix;
    /** @type {?} */
    SelectOptionComponent.prototype.content;
    /** @type {?} */
    SelectOptionComponent.prototype.isActive;
    /** @type {?} */
    SelectOptionComponent.prototype.transitionDuration;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VsZWN0LW9wdGlvbi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9tYXRlcmlhbGl6ZS1hbmd1bGFyLyIsInNvdXJjZXMiOlsiYXBwL2NvbXBsZXRlZC1jb21wb25lbnRzL3NlbGVjdC9zZWxlY3Qtb3B0aW9uL3NlbGVjdC1vcHRpb24uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBUUEsT0FBTyxFQUF1QixTQUFTLEVBQUUsVUFBVSxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNuSCxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFHekM7SUEwQkU7UUFWUyxjQUFTLEdBQVcscUJBQXFCLENBQUMsWUFBWSxDQUFDLFNBQVMsQ0FBQztRQUNqRSxhQUFRLEdBQVkscUJBQXFCLENBQUMsWUFBWSxDQUFDLFFBQVEsQ0FBQztRQUNoRSxVQUFLLEdBQXFDLHFCQUFxQixDQUFDLFlBQVksQ0FBQyxLQUFLLENBQUM7UUFFckYsV0FBTSxHQUFHLE1BQU0sQ0FBQyxVQUFVLENBQUMsTUFBTSxDQUFDO1FBT3ZDLElBQUksQ0FBQyxrQkFBa0IsR0FBRyxxQkFBcUIsQ0FBQyxZQUFZLENBQUMsa0JBQWtCLENBQUM7UUFDaEYsSUFBSSxDQUFDLFFBQVEsR0FBRyxLQUFLLENBQUM7UUFDdEIsSUFBSSxDQUFDLGNBQWMsR0FBRyxJQUFJLFlBQVksRUFBRSxDQUFDO1FBRXpDLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDN0MsQ0FBQzs7OztJQUVELHFEQUFxQjs7O0lBQXJCO1FBQ0UsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUMsaUJBQWlCLENBQUMsYUFBYTtZQUNqRCxDQUFDLENBQUMsSUFBSSxDQUFDLGlCQUFpQixDQUFDLGFBQWEsQ0FBQyxXQUFXO1lBQ2xELENBQUMsQ0FBQyxFQUFFLENBQUM7SUFDVCxDQUFDOzs7O0lBRUQsdUNBQU87OztJQUFQO1FBQ0UsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLEVBQUU7WUFDbEIsVUFBVSxDQUFDLElBQUksQ0FBQyxTQUFTLEVBQUUsSUFBSSxDQUFDLGtCQUFrQixDQUFDLENBQUM7U0FDckQ7SUFDSCxDQUFDOzs7O0lBRUQseUNBQVM7OztJQUFUO1FBQ0UsSUFBSSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ3ZDLENBQUM7SUEzQ2Usa0NBQVksR0FBc0I7UUFDaEQsU0FBUyxFQUFFLEVBQUU7UUFDYixRQUFRLEVBQUUsS0FBSztRQUNmLGtCQUFrQixFQUFFLEdBQUc7UUFDdkIsS0FBSyxFQUFFLEVBQUU7S0FDVixDQUFDOztnQkFWSCxTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFNLE1BQU0sQ0FBQyxVQUFVLENBQUMsTUFBTSxxQkFBbUI7b0JBQ3pELDRSQUE2QztpQkFDOUM7Ozs7O29DQVNFLFNBQVMsU0FBQyxnQkFBZ0IsRUFBRSxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUU7aUNBRTVDLE1BQU0sU0FBQyxTQUFTOzRCQUVoQixLQUFLOzJCQUNMLEtBQUs7d0JBQ0wsS0FBSzs7SUErQlIsNEJBQUM7Q0FBQSxBQWpERCxJQWlEQztTQTdDWSxxQkFBcUI7OztJQUNoQyxtQ0FLRTs7SUFFRixrREFBNkU7O0lBRTdFLCtDQUFrRjs7SUFFbEYsMENBQTBFOztJQUMxRSx5Q0FBeUU7O0lBQ3pFLHNDQUE0Rjs7SUFFNUYsdUNBQXlDOztJQUV6Qyx3Q0FBNEI7O0lBQzVCLHlDQUF5Qjs7SUFDekIsbURBQWtDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IFdvcmt5bGFiLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IGFuIE1JVC1zdHlsZSBsaWNlbnNlIHRoYXQgY2FuIGJlXG4gKiBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGF0IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS93b3JreWxhYi9tYXRlcmlhbGl6ZS1hbmd1bGFyL21hc3Rlci9MSUNFTlNFXG4gKi9cblxuaW1wb3J0IHsgQWZ0ZXJDb250ZW50Q2hlY2tlZCwgQ29tcG9uZW50LCBFbGVtZW50UmVmLCBFdmVudEVtaXR0ZXIsIElucHV0LCBPdXRwdXQsIFZpZXdDaGlsZCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgY29uZmlnIH0gZnJvbSAnLi4vLi4vLi4vY29uZmlnJztcbmltcG9ydCB7IFNlbGVjdE9wdGlvbk1vZGVsIH0gZnJvbSAnLi9zZWxlY3Qtb3B0aW9uLm1vZGVsJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiBgJHsgY29uZmlnLmNvbXBvbmVudHMucHJlZml4IH0tc2VsZWN0LW9wdGlvbiB9YCxcbiAgdGVtcGxhdGVVcmw6ICcuL3NlbGVjdC1vcHRpb24uY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIFNlbGVjdE9wdGlvbkNvbXBvbmVudCBpbXBsZW1lbnRzIEFmdGVyQ29udGVudENoZWNrZWQsIFNlbGVjdE9wdGlvbk1vZGVsIHtcbiAgc3RhdGljIHJlYWRvbmx5IGRlZmF1bHRQcm9wczogU2VsZWN0T3B0aW9uTW9kZWwgPSB7XG4gICAgY2xhc3NOYW1lOiAnJyxcbiAgICBkaXNhYmxlZDogZmFsc2UsXG4gICAgdHJhbnNpdGlvbkR1cmF0aW9uOiAyNTAsXG4gICAgdmFsdWU6ICcnXG4gIH07XG5cbiAgQFZpZXdDaGlsZCgnb3B0aW9uVGVtcGxhdGUnLCB7IHN0YXRpYzogdHJ1ZSB9KSBvcHRpb25UZW1wbGF0ZVJlZjogRWxlbWVudFJlZjtcblxuICBAT3V0cHV0KCdvbkNsaWNrJykgb25DbGlja0VtaXR0ZXI6IEV2ZW50RW1pdHRlcjxzdHJpbmcgfCBudW1iZXIgfCBib29sZWFuIHwgbnVsbD47XG5cbiAgQElucHV0KCkgY2xhc3NOYW1lOiBzdHJpbmcgPSBTZWxlY3RPcHRpb25Db21wb25lbnQuZGVmYXVsdFByb3BzLmNsYXNzTmFtZTtcbiAgQElucHV0KCkgZGlzYWJsZWQ6IGJvb2xlYW4gPSBTZWxlY3RPcHRpb25Db21wb25lbnQuZGVmYXVsdFByb3BzLmRpc2FibGVkO1xuICBASW5wdXQoKSB2YWx1ZTogc3RyaW5nIHwgbnVtYmVyIHwgYm9vbGVhbiB8IG51bGwgPSBTZWxlY3RPcHRpb25Db21wb25lbnQuZGVmYXVsdFByb3BzLnZhbHVlO1xuXG4gIHB1YmxpYyBwcmVmaXggPSBjb25maWcuY29tcG9uZW50cy5wcmVmaXg7XG5cbiAgcHVibGljIGNvbnRlbnQ6IEhUTUxFbGVtZW50O1xuICBwdWJsaWMgaXNBY3RpdmU6IGJvb2xlYW47XG4gIHB1YmxpYyB0cmFuc2l0aW9uRHVyYXRpb246IG51bWJlcjtcblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLnRyYW5zaXRpb25EdXJhdGlvbiA9IFNlbGVjdE9wdGlvbkNvbXBvbmVudC5kZWZhdWx0UHJvcHMudHJhbnNpdGlvbkR1cmF0aW9uO1xuICAgIHRoaXMuaXNBY3RpdmUgPSBmYWxzZTtcbiAgICB0aGlzLm9uQ2xpY2tFbWl0dGVyID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuXG4gICAgdGhpcy5lbWl0Q2xpY2sgPSB0aGlzLmVtaXRDbGljay5iaW5kKHRoaXMpO1xuICB9XG5cbiAgbmdBZnRlckNvbnRlbnRDaGVja2VkKCkge1xuICAgIHRoaXMuY29udGVudCA9IHRoaXMub3B0aW9uVGVtcGxhdGVSZWYubmF0aXZlRWxlbWVudFxuICAgICAgPyB0aGlzLm9wdGlvblRlbXBsYXRlUmVmLm5hdGl2ZUVsZW1lbnQudGV4dENvbnRlbnRcbiAgICAgIDogJyc7XG4gIH1cblxuICBvbkNsaWNrKCkge1xuICAgIGlmICghdGhpcy5kaXNhYmxlZCkge1xuICAgICAgc2V0VGltZW91dCh0aGlzLmVtaXRDbGljaywgdGhpcy50cmFuc2l0aW9uRHVyYXRpb24pO1xuICAgIH1cbiAgfVxuXG4gIGVtaXRDbGljaygpIHtcbiAgICB0aGlzLm9uQ2xpY2tFbWl0dGVyLmVtaXQodGhpcy52YWx1ZSk7XG4gIH1cbn1cbiJdfQ==