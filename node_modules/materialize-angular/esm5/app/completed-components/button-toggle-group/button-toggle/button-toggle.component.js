/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * @license
 * Copyright Workylab. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://raw.githubusercontent.com/workylab/materialize-angular/master/LICENSE
 */
import { Component, EventEmitter, Input, Output } from '@angular/core';
import { config } from '../../../config';
var ButtonToggleComponent = /** @class */ (function () {
    function ButtonToggleComponent() {
        this.className = ButtonToggleComponent.defaultProps.className;
        this.disabled = ButtonToggleComponent.defaultProps.disabled;
        this.name = ButtonToggleComponent.defaultProps.name;
        this.value = ButtonToggleComponent.defaultProps.value;
        this.prefix = config.components.prefix;
        this.onClickEmitter = new EventEmitter();
        this.isActive = false;
        this.isFocused = false;
    }
    /**
     * @return {?}
     */
    ButtonToggleComponent.prototype.onClick = /**
     * @return {?}
     */
    function () {
        if (!this.disabled) {
            this.isActive = !this.isActive;
            this.isFocused = false;
            this.onClickEmitter.emit(this.value);
        }
    };
    /**
     * @return {?}
     */
    ButtonToggleComponent.prototype.onBlur = /**
     * @return {?}
     */
    function () {
        this.isFocused = false;
    };
    /**
     * @return {?}
     */
    ButtonToggleComponent.prototype.onFocus = /**
     * @return {?}
     */
    function () {
        if (!this.disabled) {
            this.isFocused = true;
        }
    };
    ButtonToggleComponent.defaultProps = {
        className: '',
        disabled: false,
        name: '',
        value: ''
    };
    ButtonToggleComponent.decorators = [
        { type: Component, args: [{
                    selector: config.components.prefix + "-button-toggle }",
                    template: "<div (click)=\"onClick()\" (blur)=\"onBlur()\" (focus)=\"onFocus()\"\n\n  [ngClass]=\"[prefix + '-button-toggle', className]\"\n  [class.active]=\"isActive\"\n  [class.disabled]=\"disabled\"\n  [class.focused]=\"isFocused\"\n  [tabindex]=\"disabled ? '-1': '0'\"\n  [isRippleActive]=\"!disabled\"\n\n  materializeRipple  \n>\n  <ng-content></ng-content>\n</div>\n"
                }] }
    ];
    /** @nocollapse */
    ButtonToggleComponent.ctorParameters = function () { return []; };
    ButtonToggleComponent.propDecorators = {
        onClickEmitter: [{ type: Output, args: ['onClick',] }],
        className: [{ type: Input }],
        disabled: [{ type: Input }],
        name: [{ type: Input }],
        value: [{ type: Input }]
    };
    return ButtonToggleComponent;
}());
export { ButtonToggleComponent };
if (false) {
    /** @type {?} */
    ButtonToggleComponent.defaultProps;
    /** @type {?} */
    ButtonToggleComponent.prototype.onClickEmitter;
    /** @type {?} */
    ButtonToggleComponent.prototype.className;
    /** @type {?} */
    ButtonToggleComponent.prototype.disabled;
    /** @type {?} */
    ButtonToggleComponent.prototype.name;
    /** @type {?} */
    ButtonToggleComponent.prototype.value;
    /** @type {?} */
    ButtonToggleComponent.prototype.prefix;
    /** @type {?} */
    ButtonToggleComponent.prototype.isActive;
    /** @type {?} */
    ButtonToggleComponent.prototype.isFocused;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnV0dG9uLXRvZ2dsZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9tYXRlcmlhbGl6ZS1hbmd1bGFyLyIsInNvdXJjZXMiOlsiYXBwL2NvbXBsZXRlZC1jb21wb25lbnRzL2J1dHRvbi10b2dnbGUtZ3JvdXAvYnV0dG9uLXRvZ2dsZS9idXR0b24tdG9nZ2xlLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQVFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFdkUsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBRXpDO0lBd0JFO1FBVlMsY0FBUyxHQUFXLHFCQUFxQixDQUFDLFlBQVksQ0FBQyxTQUFTLENBQUM7UUFDakUsYUFBUSxHQUFZLHFCQUFxQixDQUFDLFlBQVksQ0FBQyxRQUFRLENBQUM7UUFDaEUsU0FBSSxHQUFXLHFCQUFxQixDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUM7UUFDdkQsVUFBSyxHQUFXLHFCQUFxQixDQUFDLFlBQVksQ0FBQyxLQUFLLENBQUM7UUFFM0QsV0FBTSxHQUFHLE1BQU0sQ0FBQyxVQUFVLENBQUMsTUFBTSxDQUFDO1FBTXZDLElBQUksQ0FBQyxjQUFjLEdBQUcsSUFBSSxZQUFZLEVBQVUsQ0FBQztRQUVqRCxJQUFJLENBQUMsUUFBUSxHQUFHLEtBQUssQ0FBQztRQUN0QixJQUFJLENBQUMsU0FBUyxHQUFHLEtBQUssQ0FBQztJQUN6QixDQUFDOzs7O0lBRUQsdUNBQU87OztJQUFQO1FBQ0UsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLEVBQUU7WUFDbEIsSUFBSSxDQUFDLFFBQVEsR0FBRyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUM7WUFDL0IsSUFBSSxDQUFDLFNBQVMsR0FBRyxLQUFLLENBQUM7WUFDdkIsSUFBSSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1NBQ3RDO0lBQ0gsQ0FBQzs7OztJQUVELHNDQUFNOzs7SUFBTjtRQUNFLElBQUksQ0FBQyxTQUFTLEdBQUcsS0FBSyxDQUFDO0lBQ3pCLENBQUM7Ozs7SUFFRCx1Q0FBTzs7O0lBQVA7UUFDRSxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsRUFBRTtZQUNsQixJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQztTQUN2QjtJQUNILENBQUM7SUExQ2Usa0NBQVksR0FBc0I7UUFDaEQsU0FBUyxFQUFFLEVBQUU7UUFDYixRQUFRLEVBQUUsS0FBSztRQUNmLElBQUksRUFBRSxFQUFFO1FBQ1IsS0FBSyxFQUFFLEVBQUU7S0FDVixDQUFDOztnQkFWSCxTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFNLE1BQU0sQ0FBQyxVQUFVLENBQUMsTUFBTSxxQkFBbUI7b0JBQ3pELHVYQUE2QztpQkFDOUM7Ozs7O2lDQVNFLE1BQU0sU0FBQyxTQUFTOzRCQUVoQixLQUFLOzJCQUNMLEtBQUs7dUJBQ0wsS0FBSzt3QkFDTCxLQUFLOztJQStCUiw0QkFBQztDQUFBLEFBaERELElBZ0RDO1NBNUNZLHFCQUFxQjs7O0lBQ2hDLG1DQUtFOztJQUVGLCtDQUF3RDs7SUFFeEQsMENBQTBFOztJQUMxRSx5Q0FBeUU7O0lBQ3pFLHFDQUFnRTs7SUFDaEUsc0NBQWtFOztJQUVsRSx1Q0FBeUM7O0lBRXpDLHlDQUF5Qjs7SUFDekIsMENBQTBCIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IFdvcmt5bGFiLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IGFuIE1JVC1zdHlsZSBsaWNlbnNlIHRoYXQgY2FuIGJlXG4gKiBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGF0IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS93b3JreWxhYi9tYXRlcmlhbGl6ZS1hbmd1bGFyL21hc3Rlci9MSUNFTlNFXG4gKi9cblxuaW1wb3J0IHsgQ29tcG9uZW50LCBFdmVudEVtaXR0ZXIsIElucHV0LCBPdXRwdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEJ1dHRvblRvZ2dsZU1vZGVsIH0gZnJvbSAnLi9idXR0b24tdG9nZ2xlLm1vZGVsJztcbmltcG9ydCB7IGNvbmZpZyB9IGZyb20gJy4uLy4uLy4uL2NvbmZpZyc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogYCR7IGNvbmZpZy5jb21wb25lbnRzLnByZWZpeCB9LWJ1dHRvbi10b2dnbGUgfWAsXG4gIHRlbXBsYXRlVXJsOiAnLi9idXR0b24tdG9nZ2xlLmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBCdXR0b25Ub2dnbGVDb21wb25lbnQgaW1wbGVtZW50cyBCdXR0b25Ub2dnbGVNb2RlbCB7XG4gIHN0YXRpYyByZWFkb25seSBkZWZhdWx0UHJvcHM6IEJ1dHRvblRvZ2dsZU1vZGVsID0ge1xuICAgIGNsYXNzTmFtZTogJycsXG4gICAgZGlzYWJsZWQ6IGZhbHNlLFxuICAgIG5hbWU6ICcnLFxuICAgIHZhbHVlOiAnJ1xuICB9O1xuXG4gIEBPdXRwdXQoJ29uQ2xpY2snKSBvbkNsaWNrRW1pdHRlcjogRXZlbnRFbWl0dGVyPHN0cmluZz47XG5cbiAgQElucHV0KCkgY2xhc3NOYW1lOiBzdHJpbmcgPSBCdXR0b25Ub2dnbGVDb21wb25lbnQuZGVmYXVsdFByb3BzLmNsYXNzTmFtZTtcbiAgQElucHV0KCkgZGlzYWJsZWQ6IGJvb2xlYW4gPSBCdXR0b25Ub2dnbGVDb21wb25lbnQuZGVmYXVsdFByb3BzLmRpc2FibGVkO1xuICBASW5wdXQoKSBuYW1lOiBzdHJpbmcgPSBCdXR0b25Ub2dnbGVDb21wb25lbnQuZGVmYXVsdFByb3BzLm5hbWU7XG4gIEBJbnB1dCgpIHZhbHVlOiBzdHJpbmcgPSBCdXR0b25Ub2dnbGVDb21wb25lbnQuZGVmYXVsdFByb3BzLnZhbHVlO1xuXG4gIHB1YmxpYyBwcmVmaXggPSBjb25maWcuY29tcG9uZW50cy5wcmVmaXg7XG5cbiAgcHVibGljIGlzQWN0aXZlOiBib29sZWFuO1xuICBwdWJsaWMgaXNGb2N1c2VkOiBib29sZWFuO1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHRoaXMub25DbGlja0VtaXR0ZXIgPSBuZXcgRXZlbnRFbWl0dGVyPHN0cmluZz4oKTtcblxuICAgIHRoaXMuaXNBY3RpdmUgPSBmYWxzZTtcbiAgICB0aGlzLmlzRm9jdXNlZCA9IGZhbHNlO1xuICB9XG5cbiAgb25DbGljaygpIHtcbiAgICBpZiAoIXRoaXMuZGlzYWJsZWQpIHtcbiAgICAgIHRoaXMuaXNBY3RpdmUgPSAhdGhpcy5pc0FjdGl2ZTtcbiAgICAgIHRoaXMuaXNGb2N1c2VkID0gZmFsc2U7XG4gICAgICB0aGlzLm9uQ2xpY2tFbWl0dGVyLmVtaXQodGhpcy52YWx1ZSk7XG4gICAgfVxuICB9XG5cbiAgb25CbHVyKCkge1xuICAgIHRoaXMuaXNGb2N1c2VkID0gZmFsc2U7XG4gIH1cblxuICBvbkZvY3VzKCk6IHZvaWQge1xuICAgIGlmICghdGhpcy5kaXNhYmxlZCkge1xuICAgICAgdGhpcy5pc0ZvY3VzZWQgPSB0cnVlO1xuICAgIH1cbiAgfVxufVxuIl19