/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * @license
 * Copyright Workylab. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://raw.githubusercontent.com/workylab/materialize-angular/master/LICENSE
 */
import { CommonModule } from '@angular/common';
import { MaterializeIconModule } from '../icon/icon.module';
import { NgModule } from '@angular/core';
import { StepComponent } from './step/step.component';
import { StepIndicatorComponent } from './step/step-indicator/step-indicator.component';
import { StepLabelComponent } from './step/step-label/step-label.component';
import { StepperComponent } from './stepper.component';
var MaterializeStepperModule = /** @class */ (function () {
    function MaterializeStepperModule() {
    }
    MaterializeStepperModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [
                        StepComponent,
                        StepIndicatorComponent,
                        StepLabelComponent,
                        StepperComponent
                    ],
                    exports: [
                        StepComponent,
                        StepIndicatorComponent,
                        StepLabelComponent,
                        StepperComponent
                    ],
                    imports: [
                        CommonModule,
                        MaterializeIconModule
                    ]
                },] }
    ];
    return MaterializeStepperModule;
}());
export { MaterializeStepperModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RlcHBlci5tb2R1bGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9tYXRlcmlhbGl6ZS1hbmd1bGFyLyIsInNvdXJjZXMiOlsiYXBwL2NvbXBsZXRlZC1jb21wb25lbnRzL3N0ZXBwZXIvc3RlcHBlci5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFRQSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDNUQsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDdEQsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sZ0RBQWdELENBQUM7QUFDeEYsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sd0NBQXdDLENBQUM7QUFDNUUsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFFdkQ7SUFBQTtJQW1CQSxDQUFDOztnQkFuQkEsUUFBUSxTQUFDO29CQUNSLFlBQVksRUFBRTt3QkFDWixhQUFhO3dCQUNiLHNCQUFzQjt3QkFDdEIsa0JBQWtCO3dCQUNsQixnQkFBZ0I7cUJBQ2pCO29CQUNELE9BQU8sRUFBRTt3QkFDUCxhQUFhO3dCQUNiLHNCQUFzQjt3QkFDdEIsa0JBQWtCO3dCQUNsQixnQkFBZ0I7cUJBQ2pCO29CQUNELE9BQU8sRUFBRTt3QkFDUCxZQUFZO3dCQUNaLHFCQUFxQjtxQkFDdEI7aUJBQ0Y7O0lBRUQsK0JBQUM7Q0FBQSxBQW5CRCxJQW1CQztTQURZLHdCQUF3QiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCBXb3JreWxhYi4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBNSVQtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vd29ya3lsYWIvbWF0ZXJpYWxpemUtYW5ndWxhci9tYXN0ZXIvTElDRU5TRVxuICovXG5cbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBNYXRlcmlhbGl6ZUljb25Nb2R1bGUgfSBmcm9tICcuLi9pY29uL2ljb24ubW9kdWxlJztcbmltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBTdGVwQ29tcG9uZW50IH0gZnJvbSAnLi9zdGVwL3N0ZXAuY29tcG9uZW50JztcbmltcG9ydCB7IFN0ZXBJbmRpY2F0b3JDb21wb25lbnQgfSBmcm9tICcuL3N0ZXAvc3RlcC1pbmRpY2F0b3Ivc3RlcC1pbmRpY2F0b3IuY29tcG9uZW50JztcbmltcG9ydCB7IFN0ZXBMYWJlbENvbXBvbmVudCB9IGZyb20gJy4vc3RlcC9zdGVwLWxhYmVsL3N0ZXAtbGFiZWwuY29tcG9uZW50JztcbmltcG9ydCB7IFN0ZXBwZXJDb21wb25lbnQgfSBmcm9tICcuL3N0ZXBwZXIuY29tcG9uZW50JztcblxuQE5nTW9kdWxlKHtcbiAgZGVjbGFyYXRpb25zOiBbXG4gICAgU3RlcENvbXBvbmVudCxcbiAgICBTdGVwSW5kaWNhdG9yQ29tcG9uZW50LFxuICAgIFN0ZXBMYWJlbENvbXBvbmVudCxcbiAgICBTdGVwcGVyQ29tcG9uZW50XG4gIF0sXG4gIGV4cG9ydHM6IFtcbiAgICBTdGVwQ29tcG9uZW50LFxuICAgIFN0ZXBJbmRpY2F0b3JDb21wb25lbnQsXG4gICAgU3RlcExhYmVsQ29tcG9uZW50LFxuICAgIFN0ZXBwZXJDb21wb25lbnRcbiAgXSxcbiAgaW1wb3J0czogW1xuICAgIENvbW1vbk1vZHVsZSxcbiAgICBNYXRlcmlhbGl6ZUljb25Nb2R1bGVcbiAgXVxufSlcbmV4cG9ydCBjbGFzcyBNYXRlcmlhbGl6ZVN0ZXBwZXJNb2R1bGUge1xufVxuIl19