/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * @license
 * Copyright Workylab. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://raw.githubusercontent.com/workylab/materialize-angular/master/LICENSE
 */
import { Component, ContentChildren, Input, QueryList } from '@angular/core';
import { config } from '../../config';
import { StepComponent } from './step/step.component';
var StepperComponent = /** @class */ (function () {
    function StepperComponent() {
        this.className = StepperComponent.defaultProps.className;
        this.activeIndex = StepperComponent.defaultProps.activeIndex;
        this.showTicks = StepperComponent.defaultProps.showTicks;
        this.prefix = config.components.prefix;
        this.isContentReady = true;
        this.validateContent = this.validateContent.bind(this);
    }
    /**
     * @return {?}
     */
    StepperComponent.prototype.ngAfterContentInit = /**
     * @return {?}
     */
    function () {
        this.validateContent();
        this.steps.changes.subscribe(this.validateContent);
    };
    /**
     * @return {?}
     */
    StepperComponent.prototype.validateContent = /**
     * @return {?}
     */
    function () {
        var _this = this;
        setTimeout((/**
         * @return {?}
         */
        function () {
            _this.isContentReady = false;
            _this.validateSteps();
        }), 0);
    };
    /**
     * @return {?}
     */
    StepperComponent.prototype.validateSteps = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.steps.forEach((/**
         * @param {?} step
         * @param {?} index
         * @return {?}
         */
        function (step, index) {
            step.isCompleted = (index < _this.activeIndex && _this.showTicks);
        }));
    };
    StepperComponent.defaultProps = {
        activeIndex: 0,
        className: '',
        showTicks: true
    };
    StepperComponent.decorators = [
        { type: Component, args: [{
                    selector: config.components.prefix + "-stepper }",
                    template: "<div [ngClass]=\"[prefix + '-stepper', className]\">\n  <ng-container *ngFor=\"let step of steps; index as i\">\n    <div [ngClass]=\"prefix + '-step-divider'\" *ngIf=\"i > 0\" [class.completed]=\"i <= activeIndex\"></div>\n\n    <div\n      [ngClass]=\"prefix + '-step'\"\n      [class.active]=\"i === activeIndex\"\n      [class.completed]=\"i < activeIndex\"\n      *ngIf=\"!isContentReady\"\n    >\n      <ng-template [ngTemplateOutlet]=\"step.indicatorTemplate\"></ng-template>\n      <ng-template [ngTemplateOutlet]=\"step.labelTemplate\"></ng-template>\n    </div>\n  </ng-container>\n</div>\n"
                }] }
    ];
    /** @nocollapse */
    StepperComponent.ctorParameters = function () { return []; };
    StepperComponent.propDecorators = {
        className: [{ type: Input }],
        activeIndex: [{ type: Input }],
        showTicks: [{ type: Input }],
        steps: [{ type: ContentChildren, args: [StepComponent,] }]
    };
    return StepperComponent;
}());
export { StepperComponent };
if (false) {
    /** @type {?} */
    StepperComponent.defaultProps;
    /** @type {?} */
    StepperComponent.prototype.className;
    /** @type {?} */
    StepperComponent.prototype.activeIndex;
    /** @type {?} */
    StepperComponent.prototype.showTicks;
    /** @type {?} */
    StepperComponent.prototype.steps;
    /** @type {?} */
    StepperComponent.prototype.prefix;
    /** @type {?} */
    StepperComponent.prototype.isContentReady;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RlcHBlci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9tYXRlcmlhbGl6ZS1hbmd1bGFyLyIsInNvdXJjZXMiOlsiYXBwL2NvbXBsZXRlZC1jb21wb25lbnRzL3N0ZXBwZXIvc3RlcHBlci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFRQSxPQUFPLEVBQW9CLFNBQVMsRUFBRSxlQUFlLEVBQUUsS0FBSyxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMvRixPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sY0FBYyxDQUFDO0FBQ3RDLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUd0RDtJQW9CRTtRQVRTLGNBQVMsR0FBVyxnQkFBZ0IsQ0FBQyxZQUFZLENBQUMsU0FBUyxDQUFDO1FBQzVELGdCQUFXLEdBQVcsZ0JBQWdCLENBQUMsWUFBWSxDQUFDLFdBQVcsQ0FBQztRQUNoRSxjQUFTLEdBQVksZ0JBQWdCLENBQUMsWUFBWSxDQUFDLFNBQVMsQ0FBQztRQUkvRCxXQUFNLEdBQUcsTUFBTSxDQUFDLFVBQVUsQ0FBQyxNQUFNLENBQUM7UUFDbEMsbUJBQWMsR0FBRyxJQUFJLENBQUM7UUFHM0IsSUFBSSxDQUFDLGVBQWUsR0FBRyxJQUFJLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUN6RCxDQUFDOzs7O0lBRUQsNkNBQWtCOzs7SUFBbEI7UUFDRSxJQUFJLENBQUMsZUFBZSxFQUFFLENBQUM7UUFFdkIsSUFBSSxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxlQUFlLENBQUMsQ0FBQztJQUNyRCxDQUFDOzs7O0lBRUQsMENBQWU7OztJQUFmO1FBQUEsaUJBS0M7UUFKQyxVQUFVOzs7UUFBQztZQUNULEtBQUksQ0FBQyxjQUFjLEdBQUcsS0FBSyxDQUFDO1lBQzVCLEtBQUksQ0FBQyxhQUFhLEVBQUUsQ0FBQztRQUN2QixDQUFDLEdBQUUsQ0FBQyxDQUFDLENBQUM7SUFDUixDQUFDOzs7O0lBRUQsd0NBQWE7OztJQUFiO1FBQUEsaUJBSUM7UUFIQyxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU87Ozs7O1FBQUMsVUFBQyxJQUFJLEVBQUUsS0FBSztZQUM3QixJQUFJLENBQUMsV0FBVyxHQUFHLENBQUMsS0FBSyxHQUFHLEtBQUksQ0FBQyxXQUFXLElBQUksS0FBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQ2xFLENBQUMsRUFBQyxDQUFDO0lBQ0wsQ0FBQztJQXBDZSw2QkFBWSxHQUFpQjtRQUMzQyxXQUFXLEVBQUUsQ0FBQztRQUNkLFNBQVMsRUFBRSxFQUFFO1FBQ2IsU0FBUyxFQUFFLElBQUk7S0FDaEIsQ0FBQzs7Z0JBVEgsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBTSxNQUFNLENBQUMsVUFBVSxDQUFDLE1BQU0sZUFBYTtvQkFDbkQsb21CQUF1QztpQkFDeEM7Ozs7OzRCQVFFLEtBQUs7OEJBQ0wsS0FBSzs0QkFDTCxLQUFLO3dCQUVMLGVBQWUsU0FBQyxhQUFhOztJQTJCaEMsdUJBQUM7Q0FBQSxBQTFDRCxJQTBDQztTQXRDWSxnQkFBZ0I7OztJQUMzQiw4QkFJRTs7SUFFRixxQ0FBcUU7O0lBQ3JFLHVDQUF5RTs7SUFDekUscUNBQXNFOztJQUV0RSxpQ0FBZ0U7O0lBRWhFLGtDQUF5Qzs7SUFDekMsMENBQTZCIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IFdvcmt5bGFiLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IGFuIE1JVC1zdHlsZSBsaWNlbnNlIHRoYXQgY2FuIGJlXG4gKiBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGF0IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS93b3JreWxhYi9tYXRlcmlhbGl6ZS1hbmd1bGFyL21hc3Rlci9MSUNFTlNFXG4gKi9cblxuaW1wb3J0IHsgQWZ0ZXJDb250ZW50SW5pdCwgQ29tcG9uZW50LCBDb250ZW50Q2hpbGRyZW4sIElucHV0LCBRdWVyeUxpc3QgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IGNvbmZpZyB9IGZyb20gJy4uLy4uL2NvbmZpZyc7XG5pbXBvcnQgeyBTdGVwQ29tcG9uZW50IH0gZnJvbSAnLi9zdGVwL3N0ZXAuY29tcG9uZW50JztcbmltcG9ydCB7IFN0ZXBwZXJNb2RlbCB9IGZyb20gJy4vc3RlcHBlci5tb2RlbCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogYCR7IGNvbmZpZy5jb21wb25lbnRzLnByZWZpeCB9LXN0ZXBwZXIgfWAsXG4gIHRlbXBsYXRlVXJsOiAnLi9zdGVwcGVyLmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBTdGVwcGVyQ29tcG9uZW50IGltcGxlbWVudHMgU3RlcHBlck1vZGVsLCBBZnRlckNvbnRlbnRJbml0IHtcbiAgc3RhdGljIHJlYWRvbmx5IGRlZmF1bHRQcm9wczogU3RlcHBlck1vZGVsID0ge1xuICAgIGFjdGl2ZUluZGV4OiAwLFxuICAgIGNsYXNzTmFtZTogJycsXG4gICAgc2hvd1RpY2tzOiB0cnVlXG4gIH07XG5cbiAgQElucHV0KCkgY2xhc3NOYW1lOiBzdHJpbmcgPSBTdGVwcGVyQ29tcG9uZW50LmRlZmF1bHRQcm9wcy5jbGFzc05hbWU7XG4gIEBJbnB1dCgpIGFjdGl2ZUluZGV4OiBudW1iZXIgPSBTdGVwcGVyQ29tcG9uZW50LmRlZmF1bHRQcm9wcy5hY3RpdmVJbmRleDtcbiAgQElucHV0KCkgc2hvd1RpY2tzOiBib29sZWFuID0gU3RlcHBlckNvbXBvbmVudC5kZWZhdWx0UHJvcHMuc2hvd1RpY2tzO1xuXG4gIEBDb250ZW50Q2hpbGRyZW4oU3RlcENvbXBvbmVudCkgc3RlcHM6IFF1ZXJ5TGlzdDxTdGVwQ29tcG9uZW50PjtcblxuICBwdWJsaWMgcHJlZml4ID0gY29uZmlnLmNvbXBvbmVudHMucHJlZml4O1xuICBwdWJsaWMgaXNDb250ZW50UmVhZHkgPSB0cnVlO1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHRoaXMudmFsaWRhdGVDb250ZW50ID0gdGhpcy52YWxpZGF0ZUNvbnRlbnQuYmluZCh0aGlzKTtcbiAgfVxuXG4gIG5nQWZ0ZXJDb250ZW50SW5pdCgpIHtcbiAgICB0aGlzLnZhbGlkYXRlQ29udGVudCgpO1xuXG4gICAgdGhpcy5zdGVwcy5jaGFuZ2VzLnN1YnNjcmliZSh0aGlzLnZhbGlkYXRlQ29udGVudCk7XG4gIH1cblxuICB2YWxpZGF0ZUNvbnRlbnQoKSB7XG4gICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICB0aGlzLmlzQ29udGVudFJlYWR5ID0gZmFsc2U7XG4gICAgICB0aGlzLnZhbGlkYXRlU3RlcHMoKTtcbiAgICB9LCAwKTtcbiAgfVxuXG4gIHZhbGlkYXRlU3RlcHMoKSB7XG4gICAgdGhpcy5zdGVwcy5mb3JFYWNoKChzdGVwLCBpbmRleCkgPT4ge1xuICAgICAgc3RlcC5pc0NvbXBsZXRlZCA9IChpbmRleCA8IHRoaXMuYWN0aXZlSW5kZXggJiYgdGhpcy5zaG93VGlja3MpO1xuICAgIH0pO1xuICB9XG59XG4iXX0=