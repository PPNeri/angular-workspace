/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * @license
 * Copyright Workylab. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://raw.githubusercontent.com/workylab/materialize-angular/master/LICENSE
 */
import { Component, Input } from '@angular/core';
import { FORM_MESSAGE_LEVELS } from './form-message.model';
import { config } from '../../config';
var FormMessageComponent = /** @class */ (function () {
    function FormMessageComponent() {
        this.className = FormMessageComponent.defaultProps.className;
        this.level = FormMessageComponent.defaultProps.level;
        this.prefix = config.components.prefix;
    }
    FormMessageComponent.defaultProps = {
        className: '',
        level: FORM_MESSAGE_LEVELS.INFO
    };
    FormMessageComponent.decorators = [
        { type: Component, args: [{
                    selector: config.components.prefix + "-form-message }",
                    template: "<div [ngClass]=\"[prefix + '-form-message', className, level]\">\n  <ng-content></ng-content>\n</div>\n"
                }] }
    ];
    FormMessageComponent.propDecorators = {
        className: [{ type: Input, args: ['className',] }],
        level: [{ type: Input, args: ['type',] }]
    };
    return FormMessageComponent;
}());
export { FormMessageComponent };
if (false) {
    /** @type {?} */
    FormMessageComponent.defaultProps;
    /** @type {?} */
    FormMessageComponent.prototype.className;
    /** @type {?} */
    FormMessageComponent.prototype.level;
    /** @type {?} */
    FormMessageComponent.prototype.prefix;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybS1tZXNzYWdlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL21hdGVyaWFsaXplLWFuZ3VsYXIvIiwic291cmNlcyI6WyJhcHAvY29tcGxldGVkLWNvbXBvbmVudHMvZm9ybS1tZXNzYWdlL2Zvcm0tbWVzc2FnZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFRQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNqRCxPQUFPLEVBQUUsbUJBQW1CLEVBQW9CLE1BQU0sc0JBQXNCLENBQUM7QUFDN0UsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLGNBQWMsQ0FBQztBQUV0QztJQUFBO1FBVXNCLGNBQVMsR0FBVyxvQkFBb0IsQ0FBQyxZQUFZLENBQUMsU0FBUyxDQUFDO1FBQ3JFLFVBQUssR0FBd0Isb0JBQW9CLENBQUMsWUFBWSxDQUFDLEtBQUssQ0FBQztRQUU3RSxXQUFNLEdBQUcsTUFBTSxDQUFDLFVBQVUsQ0FBQyxNQUFNLENBQUM7SUFDM0MsQ0FBQztJQVRpQixpQ0FBWSxHQUFxQjtRQUMvQyxTQUFTLEVBQUUsRUFBRTtRQUNiLEtBQUssRUFBRSxtQkFBbUIsQ0FBQyxJQUFJO0tBQ2hDLENBQUM7O2dCQVJILFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQU0sTUFBTSxDQUFDLFVBQVUsQ0FBQyxNQUFNLG9CQUFrQjtvQkFDeEQsbUhBQTRDO2lCQUM3Qzs7OzRCQU9FLEtBQUssU0FBQyxXQUFXO3dCQUNqQixLQUFLLFNBQUMsTUFBTTs7SUFHZiwyQkFBQztDQUFBLEFBZEQsSUFjQztTQVZZLG9CQUFvQjs7O0lBQy9CLGtDQUdFOztJQUVGLHlDQUFvRjs7SUFDcEYscUNBQW9GOztJQUVwRixzQ0FBeUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgV29ya3lsYWIuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3dvcmt5bGFiL21hdGVyaWFsaXplLWFuZ3VsYXIvbWFzdGVyL0xJQ0VOU0VcbiAqL1xuXG5pbXBvcnQgeyBDb21wb25lbnQsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBGT1JNX01FU1NBR0VfTEVWRUxTLCBGb3JtTWVzc2FnZU1vZGVsIH0gZnJvbSAnLi9mb3JtLW1lc3NhZ2UubW9kZWwnO1xuaW1wb3J0IHsgY29uZmlnIH0gZnJvbSAnLi4vLi4vY29uZmlnJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiBgJHsgY29uZmlnLmNvbXBvbmVudHMucHJlZml4IH0tZm9ybS1tZXNzYWdlIH1gLFxuICB0ZW1wbGF0ZVVybDogJy4vZm9ybS1tZXNzYWdlLmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBGb3JtTWVzc2FnZUNvbXBvbmVudCBpbXBsZW1lbnRzIEZvcm1NZXNzYWdlTW9kZWwge1xuICBzdGF0aWMgcmVhZG9ubHkgZGVmYXVsdFByb3BzOiBGb3JtTWVzc2FnZU1vZGVsID0ge1xuICAgIGNsYXNzTmFtZTogJycsXG4gICAgbGV2ZWw6IEZPUk1fTUVTU0FHRV9MRVZFTFMuSU5GT1xuICB9O1xuXG4gIEBJbnB1dCgnY2xhc3NOYW1lJykgY2xhc3NOYW1lOiBzdHJpbmcgPSBGb3JtTWVzc2FnZUNvbXBvbmVudC5kZWZhdWx0UHJvcHMuY2xhc3NOYW1lO1xuICBASW5wdXQoJ3R5cGUnKSBsZXZlbDogRk9STV9NRVNTQUdFX0xFVkVMUyA9IEZvcm1NZXNzYWdlQ29tcG9uZW50LmRlZmF1bHRQcm9wcy5sZXZlbDtcblxuICBwdWJsaWMgcHJlZml4ID0gY29uZmlnLmNvbXBvbmVudHMucHJlZml4O1xufVxuIl19