/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * @license
 * Copyright Workylab. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://raw.githubusercontent.com/workylab/materialize-angular/master/LICENSE
 */
import { Component, ContentChildren, EventEmitter, forwardRef, Input, Output, QueryList } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
import { config } from '../../config';
import { RadioComponent } from './radio/radio.component';
var RadioGroupComponent = /** @class */ (function () {
    function RadioGroupComponent() {
        this.canUncheck = RadioGroupComponent.defaultProps.canUncheck;
        this.className = RadioGroupComponent.defaultProps.className;
        this.disabled = RadioGroupComponent.defaultProps.disabled;
        this.name = RadioGroupComponent.defaultProps.name;
        this.required = RadioGroupComponent.defaultProps.required;
        this.value = RadioGroupComponent.defaultProps.value;
        this.prefix = config.components.prefix;
        this.isFocused = false;
        this.initRadios = this.initRadios.bind(this);
        this.registerRadios = this.registerRadios.bind(this);
        this.toggleRadios = this.toggleRadios.bind(this);
        this.onChangeEmitter = new EventEmitter();
    }
    /**
     * @return {?}
     */
    RadioGroupComponent.prototype.ngAfterContentInit = /**
     * @return {?}
     */
    function () {
        this.initRadios();
        this.radiosQueryList.changes.subscribe(this.initRadios);
    };
    /**
     * @return {?}
     */
    RadioGroupComponent.prototype.initRadios = /**
     * @return {?}
     */
    function () {
        this.disableAllRadios(this.disabled);
        setTimeout(this.registerRadios, 0);
    };
    /**
     * @return {?}
     */
    RadioGroupComponent.prototype.registerRadios = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.radiosQueryList.forEach((/**
         * @param {?} radio
         * @return {?}
         */
        function (radio) {
            radio.isActive = (radio.value === _this.value);
            radio.onClickEmitter.subscribe(_this.toggleRadios);
        }));
    };
    /**
     * @param {?} value
     * @return {?}
     */
    RadioGroupComponent.prototype.toggleRadios = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        this.setValueAllRadios(value);
        /** @type {?} */
        var currentRadio = this.radiosQueryList.find((/**
         * @param {?} radio
         * @return {?}
         */
        function (radio) { return radio.value === value; }));
        this.value = currentRadio && currentRadio.isActive
            ? currentRadio.value
            : '';
        this.onTouched();
        this.onChange(this.value);
        this.onChangeEmitter.emit(this.value);
    };
    /**
     * @param {?} value
     * @return {?}
     */
    RadioGroupComponent.prototype.setValueAllRadios = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        var _this = this;
        this.radiosQueryList.forEach((/**
         * @param {?} radio
         * @return {?}
         */
        function (radio) {
            if (radio.value !== value) {
                radio.isActive = false;
            }
            if (radio.value === value && !_this.canUncheck) {
                radio.isActive = true;
            }
        }));
    };
    /**
     * @param {?} disabled
     * @return {?}
     */
    RadioGroupComponent.prototype.disableAllRadios = /**
     * @param {?} disabled
     * @return {?}
     */
    function (disabled) {
        this.radiosQueryList.forEach((/**
         * @param {?} radio
         * @return {?}
         */
        function (radio) {
            radio.disabled = disabled;
        }));
    };
    /**
     * @param {?} isDisabled
     * @return {?}
     */
    RadioGroupComponent.prototype.setDisabledState = /**
     * @param {?} isDisabled
     * @return {?}
     */
    function (isDisabled) {
        var _this = this;
        this.disabled = isDisabled;
        setTimeout((/**
         * @return {?}
         */
        function () {
            _this.disableAllRadios(_this.disabled);
        }), 0);
    };
    /**
     * @param {?} value
     * @return {?}
     */
    RadioGroupComponent.prototype.writeValue = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        var _this = this;
        this.value = value;
        setTimeout((/**
         * @return {?}
         */
        function () {
            _this.setValueAllRadios(_this.value);
        }), 0);
    };
    /**
     * @param {?} fn
     * @return {?}
     */
    RadioGroupComponent.prototype.registerOnChange = /**
     * @param {?} fn
     * @return {?}
     */
    function (fn) {
        this.onChange = fn;
    };
    /**
     * @param {?} fn
     * @return {?}
     */
    RadioGroupComponent.prototype.registerOnTouched = /**
     * @param {?} fn
     * @return {?}
     */
    function (fn) {
        this.onTouched = fn;
    };
    /**
     * @param {?} value
     * @return {?}
     */
    RadioGroupComponent.prototype.onChange = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
    };
    /**
     * @return {?}
     */
    RadioGroupComponent.prototype.onTouched = /**
     * @return {?}
     */
    function () { };
    RadioGroupComponent.defaultProps = {
        canUncheck: false,
        className: '',
        disabled: false,
        name: '',
        required: false,
        value: ''
    };
    RadioGroupComponent.decorators = [
        { type: Component, args: [{
                    providers: [{
                            multi: true,
                            provide: NG_VALUE_ACCESSOR,
                            useExisting: forwardRef((/**
                             * @return {?}
                             */
                            function () { return RadioGroupComponent; }))
                        }],
                    selector: config.components.prefix + "-radio-group }",
                    template: "<div [ngClass]=\"[prefix + '-radio-group', className]\">\n  <ng-content select=\"materialize-radio\"></ng-content>\n</div>\n"
                }] }
    ];
    /** @nocollapse */
    RadioGroupComponent.ctorParameters = function () { return []; };
    RadioGroupComponent.propDecorators = {
        radiosQueryList: [{ type: ContentChildren, args: [RadioComponent,] }],
        onChangeEmitter: [{ type: Output, args: ['onChange',] }],
        canUncheck: [{ type: Input }],
        className: [{ type: Input }],
        disabled: [{ type: Input }],
        name: [{ type: Input }],
        required: [{ type: Input }],
        value: [{ type: Input }]
    };
    return RadioGroupComponent;
}());
export { RadioGroupComponent };
if (false) {
    /** @type {?} */
    RadioGroupComponent.defaultProps;
    /** @type {?} */
    RadioGroupComponent.prototype.radiosQueryList;
    /** @type {?} */
    RadioGroupComponent.prototype.onChangeEmitter;
    /** @type {?} */
    RadioGroupComponent.prototype.canUncheck;
    /** @type {?} */
    RadioGroupComponent.prototype.className;
    /** @type {?} */
    RadioGroupComponent.prototype.disabled;
    /** @type {?} */
    RadioGroupComponent.prototype.name;
    /** @type {?} */
    RadioGroupComponent.prototype.required;
    /** @type {?} */
    RadioGroupComponent.prototype.value;
    /** @type {?} */
    RadioGroupComponent.prototype.prefix;
    /** @type {?} */
    RadioGroupComponent.prototype.isFocused;
}
//# sourceMappingURL=data:application/json;base64,