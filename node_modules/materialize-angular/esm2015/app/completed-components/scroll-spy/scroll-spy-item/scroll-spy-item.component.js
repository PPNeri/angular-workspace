/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * @license
 * Copyright Workylab. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://raw.githubusercontent.com/workylab/materialize-angular/master/LICENSE
 */
import { Component, ElementRef, Input } from '@angular/core';
import { config } from '../../../config';
export class ScrollSpyItemComponent {
    /**
     * @param {?} element
     */
    constructor(element) {
        this.element = element;
        this.className = ScrollSpyItemComponent.defaultProps.className;
        this.id = ScrollSpyItemComponent.defaultProps.id;
    }
}
ScrollSpyItemComponent.defaultProps = {
    className: '',
    id: ''
};
ScrollSpyItemComponent.decorators = [
    { type: Component, args: [{
                selector: `${config.components.prefix}-scroll-spy-item`,
                template: "<div [attr.id]=\"id\">\n  <ng-content></ng-content>\n</div>\n"
            }] }
];
/** @nocollapse */
ScrollSpyItemComponent.ctorParameters = () => [
    { type: ElementRef }
];
ScrollSpyItemComponent.propDecorators = {
    className: [{ type: Input }],
    id: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    ScrollSpyItemComponent.defaultProps;
    /** @type {?} */
    ScrollSpyItemComponent.prototype.className;
    /** @type {?} */
    ScrollSpyItemComponent.prototype.id;
    /** @type {?} */
    ScrollSpyItemComponent.prototype.element;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2Nyb2xsLXNweS1pdGVtLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL21hdGVyaWFsaXplLWFuZ3VsYXIvIiwic291cmNlcyI6WyJhcHAvY29tcGxldGVkLWNvbXBvbmVudHMvc2Nyb2xsLXNweS9zY3JvbGwtc3B5LWl0ZW0vc2Nyb2xsLXNweS1pdGVtLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQVFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM3RCxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFPekMsTUFBTSxPQUFPLHNCQUFzQjs7OztJQVNqQyxZQUFtQixPQUFtQjtRQUFuQixZQUFPLEdBQVAsT0FBTyxDQUFZO1FBSDdCLGNBQVMsR0FBVyxzQkFBc0IsQ0FBQyxZQUFZLENBQUMsU0FBUyxDQUFDO1FBQ2xFLE9BQUUsR0FBVyxzQkFBc0IsQ0FBQyxZQUFZLENBQUMsRUFBRSxDQUFDO0lBRzdELENBQUM7O0FBVGUsbUNBQVksR0FBdUI7SUFDakQsU0FBUyxFQUFFLEVBQUU7SUFDYixFQUFFLEVBQUUsRUFBRTtDQUNQLENBQUM7O1lBUkgsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxHQUFJLE1BQU0sQ0FBQyxVQUFVLENBQUMsTUFBTyxrQkFBa0I7Z0JBQ3pELHlFQUErQzthQUNoRDs7OztZQVBtQixVQUFVOzs7d0JBYzNCLEtBQUs7aUJBQ0wsS0FBSzs7OztJQU5OLG9DQUdFOztJQUVGLDJDQUEyRTs7SUFDM0Usb0NBQTZEOztJQUVqRCx5Q0FBMEIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgV29ya3lsYWIuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3dvcmt5bGFiL21hdGVyaWFsaXplLWFuZ3VsYXIvbWFzdGVyL0xJQ0VOU0VcbiAqL1xuXG5pbXBvcnQgeyBDb21wb25lbnQsIEVsZW1lbnRSZWYsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBjb25maWcgfSBmcm9tICcuLi8uLi8uLi9jb25maWcnO1xuaW1wb3J0IHsgU2Nyb2xsU3B5SXRlbU1vZGVsIH0gZnJvbSAnLi9zY3JvbGwtc3B5LWl0ZW0ubW9kZWwnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6IGAkeyBjb25maWcuY29tcG9uZW50cy5wcmVmaXggfS1zY3JvbGwtc3B5LWl0ZW1gLFxuICB0ZW1wbGF0ZVVybDogJy4vc2Nyb2xsLXNweS1pdGVtLmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBTY3JvbGxTcHlJdGVtQ29tcG9uZW50IGltcGxlbWVudHMgU2Nyb2xsU3B5SXRlbU1vZGVsIHtcbiAgc3RhdGljIHJlYWRvbmx5IGRlZmF1bHRQcm9wczogU2Nyb2xsU3B5SXRlbU1vZGVsID0ge1xuICAgIGNsYXNzTmFtZTogJycsXG4gICAgaWQ6ICcnXG4gIH07XG5cbiAgQElucHV0KCkgY2xhc3NOYW1lOiBzdHJpbmcgPSBTY3JvbGxTcHlJdGVtQ29tcG9uZW50LmRlZmF1bHRQcm9wcy5jbGFzc05hbWU7XG4gIEBJbnB1dCgpIGlkOiBzdHJpbmcgPSBTY3JvbGxTcHlJdGVtQ29tcG9uZW50LmRlZmF1bHRQcm9wcy5pZDtcblxuICBjb25zdHJ1Y3RvcihwdWJsaWMgZWxlbWVudDogRWxlbWVudFJlZikge1xuICB9XG59XG4iXX0=